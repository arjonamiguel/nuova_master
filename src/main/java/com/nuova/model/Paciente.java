package com.nuova.model;

// Generated Dec 14, 2015 8:20:12 PM by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Paciente generated by hbm2java
 */
@Entity
@Table(name = "paciente"
        , catalog = "nuova")
public class Paciente implements java.io.Serializable {

    private Integer pacienteId;
    private Paciente paciente;
    private String apellido;
    private String nombe;
    private Date fechaNacimiento;
    private String domicilio;
    private String telefono;
    private String mail;
    private Byte liberado;
    private List<PacienteObrasocial> pacienteObrasocials = new ArrayList<PacienteObrasocial>(0);
    private List<Paciente> pacientes = new ArrayList<Paciente>(0);

    public Paciente() {
    }

    public Paciente(Paciente paciente, String apellido, String nombe, Date fechaNacimiento, String domicilio,
            String telefono, String mail, Byte liberado, List<PacienteObrasocial> pacienteObrasocials,
            List<Paciente> pacientes) {
        this.paciente = paciente;
        this.apellido = apellido;
        this.nombe = nombe;
        this.fechaNacimiento = fechaNacimiento;
        this.domicilio = domicilio;
        this.telefono = telefono;
        this.mail = mail;
        this.liberado = liberado;
        this.pacienteObrasocials = pacienteObrasocials;
        this.pacientes = pacientes;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "paciente_id", unique = true, nullable = false)
    public Integer getPacienteId() {
        return this.pacienteId;
    }

    public void setPacienteId(Integer pacienteId) {
        this.pacienteId = pacienteId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "adherente_id")
    public Paciente getPaciente() {
        return this.paciente;
    }

    public void setPaciente(Paciente paciente) {
        this.paciente = paciente;
    }

    @Column(name = "apellido", length = 256)
    public String getApellido() {
        return this.apellido;
    }

    public void setApellido(String apellido) {
        this.apellido = apellido;
    }

    @Column(name = "nombe", length = 256)
    public String getNombe() {
        return this.nombe;
    }

    public void setNombe(String nombe) {
        this.nombe = nombe;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_nacimiento", length = 10)
    public Date getFechaNacimiento() {
        return this.fechaNacimiento;
    }

    public void setFechaNacimiento(Date fechaNacimiento) {
        this.fechaNacimiento = fechaNacimiento;
    }

    @Column(name = "domicilio", length = 512)
    public String getDomicilio() {
        return this.domicilio;
    }

    public void setDomicilio(String domicilio) {
        this.domicilio = domicilio;
    }

    @Column(name = "telefono", length = 56)
    public String getTelefono() {
        return this.telefono;
    }

    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }

    @Column(name = "mail", length = 128)
    public String getMail() {
        return this.mail;
    }

    public void setMail(String mail) {
        this.mail = mail;
    }

    @Column(name = "liberado")
    public Byte getLiberado() {
        return this.liberado;
    }

    public void setLiberado(Byte liberado) {
        this.liberado = liberado;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "paciente")
    public List<PacienteObrasocial> getPacienteObrasocials() {
        return this.pacienteObrasocials;
    }

    public void setPacienteObrasocials(List<PacienteObrasocial> pacienteObrasocials) {
        this.pacienteObrasocials = pacienteObrasocials;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "paciente")
    public List<Paciente> getPacientes() {
        return this.pacientes;
    }

    public void setPacientes(List<Paciente> pacientes) {
        this.pacientes = pacientes;
    }

}
